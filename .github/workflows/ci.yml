name: Ollama Proxy CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: RuboCop Linting
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities
        run: bin/brakeman --no-pager --format json --output tmp/brakeman.json

      - name: Upload Brakeman results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: brakeman-results
          path: tmp/brakeman.json

  test:
    name: RSpec Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ruby-version: ['3.4.4']

    steps:
      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
            build-essential \
            git \
            libyaml-dev \
            pkg-config \
            sqlite3 \
            libsqlite3-dev

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Setup test database
        env:
          RAILS_ENV: test
        run: |
          bin/rails db:create
          bin/rails db:migrate

      - name: Run RSpec tests
        env:
          RAILS_ENV: test
        run: |
          bundle exec rspec --format progress --format RspecJunitFormatter --out tmp/rspec_results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: rspec-results-ruby-${{ matrix.ruby-version }}
          path: tmp/rspec_results.xml

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [lint, security, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Setup database
        env:
          RAILS_ENV: test
        run: |
          bin/rails db:create
          bin/rails db:migrate

      - name: Test application boot
        env:
          RAILS_ENV: production
        run: |
          # Test that the application can boot without errors
          timeout 30s bin/rails runner "puts 'Application boots successfully'"

      - name: Test rake tasks
        env:
          RAILS_ENV: test
        run: |
          # Test user management rake tasks
          bin/rails users:create[test_user] || true
          bin/rails users:list || true

      - name: Test configuration loading
        env:
          RAILS_ENV: test
        run: |
          # Test that configuration loads properly
          bin/rails runner "puts Rails.application.config.ollama_proxy.inspect"

  build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [lint, security, test]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ollama-proxy:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          # Test that the Docker image can run basic commands
          docker run --rm ollama-proxy:test bundle exec rails --version
          docker run --rm ollama-proxy:test bundle exec rails runner "puts 'Docker image works'"
